package com.company;

import java.util.ArrayList;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        final char DEAL_INFO = 'A';
        final char PART_PRINT = 'B';
        final char VEHL_PRINT = 'C';
        final char ADD_SALES_LEAD = 'D';
        final char SALES_LEAD_PRINT = 'E';
        final char ADD_PART = 'F';
        final char ADD_VEHICLE = 'G';
        final char SELL_VEHICLE = 'H';
        final char HELP_CODE = '?';
        final char PAYMENT = 'P';
        final char EXIT_CODE = 'X';

        char userAction;
        final String PROMPT_ACTION = "List Dealership Info (A), List Part (B), List Vehicle (C), Add Sales Lead (D), List Sales Leads (E), Add Part (F), Add Vehicle (G), Sell Vehicle (H), Payment (P), Help (?),  Exit (X): ";

        ArrayList<Parts> partsList = new ArrayList<>();
        ArrayList<Vehicle> vehicleList = new ArrayList<>();
        ArrayList<SalesLead> salesLeadList = new ArrayList<>();
        ArrayList<SalesPerson> salesPeople = new ArrayList<>();

        Parts Engine1 = new Parts(PartID.name, PartCategory.engine, "V8");
        Parts Break1 = new Parts(PartID.name, PartCategory.carBreak, "Break 1");

        partsList.add(Engine1);
        partsList.add(Break1);

        /* FIXME
        SalesPerson s1 = new SalesPerson("James","Bond", 111111);
        SalesPerson s2 = new SalesPerson("Barack ","Obama", 222222);
        SalesPerson s3 = new SalesPerson("Donald","Trump", 333333);

        salesPeople.add(s1);
        salesPeople.add(s2);
        salesPeople.add(s3);
        */

        Vehicle vehicle = new Vehicle("Ford", "Explorer", VehicleMake.SUV, 5);

        vehicleList.add(vehicle);

        userAction = getAction(PROMPT_ACTION);

        while (userAction != EXIT_CODE) {
            switch (userAction) {
                case PART_PRINT:
                    Inventory.printParts(partsList);
                    break;
                case VEHL_PRINT:
                    Inventory.printVehicle(vehicleList);
                    break;
                case HELP_CODE:
                    getAction(PROMPT_ACTION);
                    break;
                case ADD_PART:
                    // add part
                    // FIXME partsList.add(main.addPart());
                    break;
                case ADD_VEHICLE:
                    // add vehicle
                    // FIXME vehicleList.add(main.addVehicle());
                    break;
                case SELL_VEHICLE:
                    // sell vehicle
                    // FIXME
                    break;
                case DEAL_INFO:
                    // print dealer info
                    // FIXME Dealership.printInfo;
                    break;
                case ADD_SALES_LEAD:
                    // add sales lead
                    // FIXME salesLeadList.add(main.addSalesLead());
                    break;
                case SALES_LEAD_PRINT:
                    // print sales lead
                    //FIXME SalesLead.listSalesLeads(salesLeadList);
                    break;
                case PAYMENT:
                    // payment
                    break;
            }

            userAction = getAction(PROMPT_ACTION);
        }
    }

    public static char getAction(String prompt) {
        Scanner scnr = new Scanner(System.in);
        String answer = "";
        System.out.println(prompt);
        answer = scnr.nextLine().toUpperCase() + " ";
        char firstChar = answer.charAt(0);
        return firstChar;
    }

    /* FIXME add these methods

    public SalesLead addSalesLead() {
    }

    public Vehicle addVehicle() {
    }

    public Vehicle sellVehicle() {
    }

    public Parts addPart() {
    }

    public Payment makePayment() {
    }



    */
}




